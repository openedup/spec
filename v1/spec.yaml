openapi: "3.0.2"

info:
  version: 1.0.0
  title: Open Education Platform - V1
  description: An open standard to store and communicate education-related data
  contact:
    name: Open Education Platform Team
    email: info@openedup.org
    url: https://openedup.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

tags:
  - name: info
    description: General information about the API which is not domain specific
  - name: security
    description: Security operations like authentication / authorization
  - name: user
    description: User operations
  - name: institution
    description: Institution operations
  - name: L1
    description: Specification level 1 (minimum implementation)
  - name: L2
    description: Specification level 2 (additional implementation)
  - name: L3
    description: Specification level 3 (optional implementation)
paths:

  /:
    get:
      summary: Check endpoint to ensure the application is online and healthy
      description: >
        This is mainly used by load-balancers, but also by clients to check if the application is up and running
      tags:
        - info
        - L3
      responses:
        '200':
          description: Ok, if everything works fine
        '500':
          description: Internal server error, if the underlying application has problems
    head:
      summary: Check endpoint to ensure the application is online and healthy
      description: >
        This is mainly used by load-balancers, but also by clients to check if the application is up and running
      tags:
        - info
        - L3
      responses:
        '200':
          description: Ok, if everything works fine
        '500':
          description: Internal server error, if the underlying application has problems
  /info:
    get:
      summary: Returns info about the API
      tags:
        - info
      responses:
        '200':
          description: API Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInfo'

  /security/auth/pw:
    post:
      summary: Issues a new auth token
      description: >
        Issues a new authentication token, if successfully authorized
      tags:
        - security
        - L2
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                username:
                  description: Email of the user to login
                  type: string
                  format: email
                password:
                  description: Password to log in
                  type: string
                  format: password
              required:
                - username
                - password
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccess'
              examples:
                auth-success:
                  $ref: '#/components/examples/AuthSuccess'
        '401':
          description: Either username or password was wrong, user is inactive, or blocked
        '400':
          description: Malformed request or parameter missing
  /security/auth/renew:
    post:
      summary: Renow a soon expiring auth token
      tags:
        - security
        - L2
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccess'
              examples:
                auth-success:
                  $ref: '#/components/examples/AuthSuccess'
        '401':
          description: Either username or password was wrong, user is inactive, or blocked
        '400':
          description: Malformed request or parameter missing

  /user:
    get:
      summary: Get all users
      description: |
        Only users known to authenticated users are returned
      tags:
        - user
        - L1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - user
        - L2
      security:
        - bearerAuth: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Successfully created
        '401':
          description: Unauthorized
        '400':
          description: Malformed request or parameter missing
        '404':
          description: Resource not found
  /user/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: Unique ID
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get a specific user by its UUID
      description: |
        Only users known to authenticated users are returned
      tags:
        - user
        - L1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '404':
          description: Resource not found
    put:
      summary: Change a specific user by its UUID
      tags:
        - user
        - L2
      security:
        - bearerAuth: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Successfully updated
        '401':
          description: Unauthorized
        '400':
          description: Malformed request or parameter missing
        '404':
          description: Resource not found
    delete:
      summary: Delete a specific user by its UUID
      tags:
        - user
        - L3
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully deleted
        '401':
          description: Unauthorized
        '400':
          description: Malformed request or parameter missing
        '404':
          description: Resource not found

  /institution:
    get:
      summary: Get all institutions
      description: |
        Only institutions known to authenticated users are returned
      tags:
        - institution
        - L1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Institution'
    post:
      summary: Create a new institution
      tags:
        - institution
        - L2
      security:
        - bearerAuth: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Institution'
      responses:
        '201':
          description: Successfully created
        '401':
          description: Unauthorized
        '400':
          description: Malformed request or parameter missing
        '404':
          description: Resource not found
  /institution/{uuid}:
    parameters:
      - name: uuid
        in: path
        description: Unique ID
        required: true
        schema:
          type: string
          format: uuid

    get:
      summary: Get a specific institution by its UUID
      description: |
        Only institutions known to authenticated users are returned
      tags:
        - institution
        - L1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '401':
          description: Unauthorized
        '404':
          description: Resource not found
    put:
      summary: Change a specific institution by its UUID
      tags:
        - institution
        - L2
      security:
        - bearerAuth: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Institution'
      responses:
        '201':
          description: Successfully updated
        '401':
          description: Unauthorized
        '400':
          description: Malformed request or parameter missing
        '404':
          description: Resource not found
    delete:
      summary: Delete a specific institution by its UUID
      tags:
        - user
        - L3
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully deleted
        '401':
          description: Unauthorized
        '400':
          description: Malformed request or parameter missing
        '404':
          description: Resource not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiInfo:
      required:
        - version
        - openedupVersion
      properties:
        version:
          type: string
          description: Version of the API
        openedupVersion:
          type: string
          format: semver
          description: The version fo the openEduPlatform standard used
        organization:
          type: string
          description: Name or identifier of the providing organization
        systemName:
          type: string
          description: Returns the name of the system or API
        environment:
          type: string
          description: Indicates whether this is a test, stage, or production environment
        description:
          type: string
          description: Prose text describing the current API
    AuthSuccess:
      required:
        - userUuid
        - token
      properties:
        userUuid:
          type: string
          format: uuid
        token:
          type: string
        tokenExpiration:
          type: string
          format: date-time
    User:
      required:
        - uuid
        - active
      properties:
        uuid:
          type: string
          format: uuid
        email:
          type: string
          format: email
        active:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
    UserCreate:
      required:
        - uuid
        - active
      properties:
        uuid:
          type: string
          format: uuid
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        active:
          type: boolean
        firstName:
          type: string
        lastName:
          type: string
    Institution:
      required:
        - uuid
        - name
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string

  examples:
    AuthSuccess:
      value:
        userUuid: "4dd29b64-83a3-4508-84cd-616215f4cf8d"
        token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        tokenExpiration: "2019-12-07T09:47:34.274Z"
